Developer --> Develop a code for your application in your personal system, text format of code will not help us to run it as application by end user
   |
Build --> convert the code into executable format (Maven, gradle,...)
   |
 Test --> test the code if there is any violation or vulnerabilities
   |
Deploy --> Deploy the build into target server to make it available for end user.

Git - helps developers to work on the same code at the same time and collabrote efficiently without conflicts
Teraform is used to provision the infrastructer and ansile is used to configure the tools/software after provisioning the infrastructure.

Devops Cycle

Code --> Build-->test-->release-->deploy-->operate-->monitor-->feedback.

Linux:
Shell type;
1) Bourn Shell (sh shell)
2) C shell (csh or tcsh)
3) Z shell (zsh)
4) Bourn again shell (Bash Shell)
> echo $SHELL --> it will give you the which shell you are currently in
> echo Hi --> print screen
> ls --> list the content of the dir
> mkdir aaa --> create directory
> cd aaa --> change the path
> pwd -> present working directory
> cd aaa, mkdir bbb -> run multiple command use semicolon
> rm -r <dir> --> remove the directory
> touch new_file.txt --> create new file
>> cat > new_file -->  add content to the file
> cat new_file --> view the content 
> cp <source> <destiniation> --> copy the file
> mv <source> < destination> --> move(rename) the file
VI Editor:
Command mode --> press esc to get out of insert mode.
Delete -- X or dd
copy&paste -- yy&p
scroll up/down -- ctrl+u/ctrl+d
save -- :w
quit -- :q
save and quit -- :wq
find -- /of-it will highlight all "of", press n --> to see one by one
Insert Mode --> press i
User Commands:
>whoami -- to show the current user
>id --> gives more info about user (id, group..)
> su <username> -- switch one user to another
> shh <username>@<ipaddress> -- access another server from your system 
> sudo ls /root --> should use sudo prefix to access root dir files, otherwise,you will get permission denied error.
> curl <url> -o --> download files from url
> wget <url> -o aaa.txt --> download files and save it as aaa.txt
> ls /etc/*release* --. list out all the release files
> cat /etc/*release* -- display the content
Package: -- this will query the software, install all the dependencies and packages which required to run the project)

> rpm(redhat package manager) -i telnet.rpm -- install package
> rpm -e telnet -- remove package
> rpm -q telnet -- query package
>yum -- high level package manager that uses RPM underneath.it will search all the repositries, install all the dependecies and requiread software

Services:
Services in linux will help you configure software to run in the background
>service httpd start or systemctl start httpd --> start the service
>systemctl stop httpd
>systemctl enable httpd --> enable service to start at startup
>systemctl disable httpd
>systemctl status httpd --> to know the status of service

Networking:

switch --> used to connect the two devices by using network
router --> used to connect two different networks, communicate each other
Gateway --> acting as a door for network, it will helps to find the correct router to senf the network packets
> ip link --> to list and modify interfaces on the host IP
> ip addr --> to see the ip adress assigned to interface
> ip addr add --> used to set ip address to the interface
DNS --> used to keep name for IP address to easy access
DNS server --> will help to manage the host details of all servers.
 --> every server should have etc/resolve.config file to strore server details in DNS server
